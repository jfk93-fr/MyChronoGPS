Création et installation d'une carte SD contenant MyChronoGPS
1 - récupérez une image raspian buster lite
2 - écrire l'image sur la carte SD avec Win32DiskImager
3 - écrire un fichier ssh vide sur la carte SD
4 - démonter la carte et l'installer dans le RPI
5 - brancher le RPI
6 - pour accéder au RPI via une connexion SSH, repérez l'adresse IP du RPI dans le réseau
7 - lancer putty
8 - se connecter en SSH à l'adresse IP du RPI, port 22

Pour les RPI2, on utilise un dongle Wifi
Rechercher le driver correspondant.
Installation de la clé WiFi TP-LINK TL-WN725N
Toutes les infos sont sur https://www.latelierdugeek.fr/2015/06/02/installer-cle-wifi-tp-link-tl-wn725n-raspberrypi-v2-raspbian/

1 – entrer la commande

2 - Repérer le nom du fichier pilote:
https://www.raspberrypi.org/forums/viewtopic.php?p=462982#p462982

ici : http://downloads.fars-robotics.net/wifi-drivers/8188eu-drivers/8188eu-4.1.19-v7-858.tar.gz

3 – Passer les commandes :
et

puis :
$ sudo reboot
Configuration de la clé WiFi en ligne de commande
1 – faire une scan du réseau en passant la commande :
$ sudo iwlist wlan0 scan
ou
$ sudo iwlist wlan0 scan | grep ESSID
	(n'affiche que les ESSID des réseaux WiFi disponibles à proximité)

2 – ouvrir le fichier de configuration :
$ sudo nano /etc/wpa_supplicant/wpa_supplicant.conf
3 – ajouter les lignes suivantes :
network={
	ssid="networkname"
	psk="networkPassword"
}
4 – terminer l'édition du fichier en faisant Ctrl+O puis Entrée lorsque le nom du fichier s'affiche et quitter l'éditeur avec Ctrl+X

5 – reconfigurer l'interface :
$ sudo wpa_cli -i wlan0 reconfigure
Maintenant, on peut se connecter via le WiFi en indiquant l'adresse IP du RPI dans le réseau WiFi (voir la box internet)

Terminer la config du Raspberry
Passer la commande :
$ sudo raspi-config
3 - Interface Options
	P5 I2C => Oui
	P6 Serial Port => shell:non / serial port hardware:oui

A la fin de la configuration faire un reboot
$ sudo reboot

Installer les outils I2C pour Python
1 – mettre à jour le système (s'il y a longtemps que ça n'a pas été fait)
$ sudo apt update
$ sudo apt upgrade -y
2 - Une fois le système mis à jour, lancez l’installation des outils permettant de communiquer avec les périphériques i2c en Python (python-smbus)
et les outils de diagnostic (i2c-tools).
$ sudo apt-get install -y python-smbus i2c-tools
3 - L’installation terminée, on peut déjà tester si les modules sont bien chargés

4 - Vérifier l’adresse du périphérique avec i2cdetect
$ sudo i2cdetect -y 1
(pour les anciens modèles : $ sudo i2cdetect -y 0)

5 - si pip n'est pas installé, l'installer en passant les commandes
$ sudo apt-get update
$ sudo apt-get install python-pip

6 – installer wiringpi
$ sudo pip3 install wiringpi

Installer l'interface série
$ sudo pip install pyserial
$ sudo pip install gpio

Installer les fichiers de MyChronoGPS
1 – dans le répertoire /home/pi/ créer un répertoire MyChronoGPS
2 – dans le répertoire MyChronoGPS créer les sous répertoires suivants:
	analysis
	cache
	log
	parms
	pipes
	sessions
	traces
	tracks
3 – copier les fichiers suivants dans le répertoire MyChronoGPS:
	MyChronoGPS.py
	MyChronoGPS_BUTTON.py
	MyChronoGPS_Dummy.py
	MyChronoGPS_NMEA.py
	MyChronoGPS_OLED.py
	MyChronoGPS_Parms.py
	MyChronoGPS_UBX.py
	Rpi_I2C_driver.py
	start_gps.sh
4 – copier le fichier params.json dans le répertoire parms
5 – dans le répertoire tracks copier tous les fichiers *.trk

6 - installer Lighttpd
$ sudo apt-get install lighttpd
7 - installer Lighttpd PHP
$ sudo apt-get install php7.4-fpm php7.4-mbstring php7.4-mysql php7.4-curl php7.4-gd php7.4-zip php7.4-xml -y
8 - configurer lighttpd
$ sudo lighttpd-enable-mod fastcgi
$ sudo lighttpd-enable-mod fastcgi-php

$ sudo nano /etc/lighttpd/conf-available/15-fastcgi-php.conf
# -*- depends: fastcgi -*-
# /usr/share/doc/lighttpd/fastcgi.txt.gz
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ConfigurationOptions#mod_fastcgi-fastcgi

## Start an FastCGI server for php (needs the php7-cgi package)
fastcgi.server += ( ".php" =>
        ((
                "socket" => "/var/run/php/php7.4-fpm.sock",
                "broken-scriptfilename" => "enable"
        ))
)

	– éditer et modifier le fichier /etc/lighttpd/conf-available/10-cgi.conf
# /usr/share/doc/lighttpd/cgi.txt

server.modules += ( "mod_cgi" )

$HTTP["url"] =~ "^/cgi-bin/" {
	cgi.assign = ( ".py" => "/usr/bin/python3",
	".cgi" => "" 
	)
	alias.url += ( "/cgi-bin/" => "/usr/lib/cgi-bin/" )
}

5 – passer la commande
$ sudo lighttpd-enable-mod cgi
6 – vérifier la config de lighttpd en passant la commande
$ lighttpd -t -f /etc/lighttpd/lighttpd.conf
7 – Si la syntaxe est ok, redémarrer lighttpd
$ sudo service lighttpd force-reload
8 – Donner les droits sudo à www-data
$ sudo visudo
à la fin du fichier, ajouter la ligne
www-data ALL=(ALL:ALL) NOPASSWD:ALL
c'est nécessaire pour passer la commande start_gps.sh via une interface web

Installer MyChronoGPS Web
	– modifier les droits du répertoire /var/www/html
	C'est le répertoire créé par l'installation de lighttp et c'est là qu'on va placer MyChronoGPS Web
$ sudo chown -R www-data:www-data /var/www # l'utilisateur et le groupe www-data est propriétaire de /var/www
$ sudo usermod -a -G www-data pi # ajoute l'utilisateur pi au groupe www-data
$ sudo chmod -R g+rwX /var/www # attribution automatique des fichiers et répertoires au groupe www-data
$ groups pi # vérifie l'abonnement de l'utilisateur aux groupes
	- dans le répertoire /var/www/html copier les fichiers suivants:
		index.html
		MyChronoGPS.html
		MyChronoGPS-Analysis.html
		MyChronoGPS-Cmd.html
		MyChronoGPS-Dashboard.html
		MyChronoGPS-DesignTrack.html
		MyChronoGPS-Live.html
		MyChronoGPS-Sessions.html
		MyChronoGPS-Tracks.html
	- dans le répertoire /var/www/ copier les dossiers suivants:
		ajax
		css
		Icones
		img
		js
		
8 – donner les droits sur le répertoire MyChronoGPS
pi@raspberrypi:~ $ sudo chmod -R u+wx,g+wx,o+wx /home/pi/MyChronoGPS

9 - changer le propriétaire du dossier tracks
pi@raspberrypi:~ $ sudo chown -R www-data:www-data /home/pi/MyChronoGPS/tracks

10 - changer le propriétaire du dossier parms
pi@raspberrypi:~ $ sudo chown -R www-data:www-data /home/pi/MyChronoGPS/parms

=============================================================================================================
Ce qui suit est nécessaire pour les afficheurs OLED:

installer Adafruit_GPIO :
$ sudo  pip  install Adafruit_GPIO

installer Adafruit_SSD1306 :
$ sudo  pip  install Adafruit_SSD1306

installer mscorefonts :
$ sudo  apt-get install ttf-mscorefonts-installer
=============================================================================================================

Ce qui suit est nécessaire pour les écrans TFT LCD Touch Screen:
Configurer l’écran 3.5 inch TFT LCD Touch Screen avec le Raspberry Pi

$ sudo rm -rf LCD-show
$ git clone https://github.com/goodtft/LCD-show.git
$ chmod -R 755 LCD-show
$ cd LCD-show/
$ sudo ./LCD35-show
Après redémarrage du Raspberry Pi vous devriez voir apparaitre le desktop de Raspbian sur votre petit écran.

Pour faire pivoter l'affichage de 180° :
$ cd LCD-show/
$ sudo ./rotate.sh 180
Après redémarrage du Raspberry Pi l'affiche sur l'écran a pivoté de 180°.

Désactiver l’écran LCD 3.5 du raspberry pi et retourner vers un écran HDMI
$ chmod -R 755 LCD-show
$ cd LCD-show/
$ sudo ./LCD-hdmi

=============================================================================================================
Lancer MyChronoGPS au démarrage
Editer le fichier /etc/rc.local
$ sudo nano /etc/rc.local
avant la ligne exit 0 insérer la commande pour démarrer MyChronoGPS au démarrage du Rpi :
sh /home/pi/MyChronoGPS/start_gps.sh
=============================================================================================================

**************************
Depuis la version 1.15 de MyChronoGPS, les échanges avec l'écran se font via des fichiers en mémoire partagée à la place des named pipes.
S'il n'existe pas, créer un dossier cache dans le dossier /home/pi/MyChronoGPS et donner les droits en écriture au groupe www-data :
$ sudo mkdir /home/pi/MyChronoGPS/cache
$ sudo chown www-data:www-data /home/pi/MyChronoGPS/cache

Monter les dossiers temporaires en tant que mémoire partagée :
$ sudo mount -t tmpfs -o size=2M,mode=0777 tmpfs /home/pi/MyChronoGPS/cache
$ sudo mount -t tmpfs -o size=20M,mode=0777 tmpfs /home/pi/MyChronoGPS/pipes

Monter la zone mémoire au reboot :
$ sudo nano /etc/fstab
Ajouter une ligne au fichier :
$ tpmfs /home/pi/MyChronoGPS/cache tmpfs size=2M,mode=0777 0 0
$ tmpfs /home/pi/MyChronoGPS/pipes tmpfs size=20M,mode=0777 0 0

Lancer le tableau de bord au démarrage du pi :
Créer le dossier lxsession pour le pi :
$ mkdir /home/pi/.config/lxsession
Créer le dossier LXDE-pi :
$ mkdir /home/pi/.config/lxsession/LXDE-pi
Créer le fichier autostart :
$ sudo nano /home/pi/.config/lxsession/LXDE-pi/autostart
@lxpanel –profile LXDE-pi
@pcmanfm –desktop –profile LXDE-pi
@xscreensaver -no-splash
@/usr/bin/chromium-browser –-start-fullscreen --disable-restore-session-state http://localhost
Pour éviter l'extinction de l'écran ajouter les lignes suivantes :
@xset s off
@xset -dpms
@xset s noblank

Utilisation de Google Maps API
Par défaut, MyChronoGPS utilise Leaflet pour les outils analyse et design track.
Si vous possédez une clé pour l'API Google Maps, vous pouvez utiliser l'API en faisant les cations suivantes :
Copiez les fichiers du dossier GoogleMaps dans le dossier /var/www/html
Editez le fichier /var/www/html/js/key.js
Modifiez la ligne
	var myKey = 'Your_API_Key';
en remplacant le texte par votre clé API.
Sauvez le fichier modifié.

=============================================================================================================
Erreurs Web
500 – pour avoir le détail, passer la commande 
$ systemctl status lighttpd.service

Consultez les fichiers log :
"/var/log/lighttpd/error.log"